group 'com.ivan1pl.witchcraft'
version '0.6.0'

ext {
    spigotVersion = '1.15.2-R0.1-SNAPSHOT'
    reflectionsVersion = '0.9.11'
    commonsDbcpVersion = '2.7.0'
}

allprojects {

    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    group 'com.ivan1pl.witchcraft'
    version '0.6.0'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        maven {
            url 'https://hub.spigotmc.org/nexus/content/repositories/public/'
        }
    }

    tasks.withType(JavaCompile) {
        inputs.files configurations.runtime
        options.compilerArgs << '-parameters'
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    javadoc {
        options {
            links 'https://docs.oracle.com/javase/8/docs/api/'
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
                pom {
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'Ivan1pl'
                            name = 'MikoÅ‚aj Nowak'
                        }
                    }
                }
            }
        }
    }
}

def exportedProjects = [
        ':witchcraft-core',
        ':witchcraft-context',
        ':witchcraft-commands',
        ':witchcraft-jdbc',
        ':witchcraft-plugin',
        ':witchcraft-plugin-generator'
]

task allJavadoc(type: Javadoc) {
    source exportedProjects.collect { projectName ->
        project(projectName).sourceSets.main.allJava
    }
    classpath = files(exportedProjects.collect { project(it).sourceSets.main.compileClasspath })
    destinationDir = new File(buildDir, 'docs/javadoc')
    options {
        links 'https://docs.oracle.com/javase/8/docs/api/'
    }
}
